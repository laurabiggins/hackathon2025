#!/bin/bash

## MAJIQ BUILD

# convert gff3 text file to annotation databse
#majiq-v3 gff3 ./Homo_sapiens.GRCh38.108.gff3 ./sg_zarr

# convert bam files into splice junction databases
#majiq-v3 sj ./bams/SGNex_H9_Illumina_replicate2_run1.markdup.sorted.bam ./sg_zarr ./sj/H9_replicate2.sj
#majiq-v3 sj ./bams/SGNex_H9_Illumina_replicate3_run1.markdup.sorted.bam ./sg_zarr ./sj/H9_replicate3.sj
#majiq-v3 sj ./bams/SGNex_K562_Illumina_replicate3_run1.markdup.sorted.bam ./sg_zarr ./sj/K562_replicate3.sj
#majiq-v3 sj ./bams/SGNex_K562_Illumina_replicate4_run1.markdup.sorted.bam ./sg_zarr ./sj/K562_replicate4.sj

# the main build command (similar to v2 majiq build)
# the config file is specified as a TSV with a 'group', 'prefix' (experiment name), and 'sj' (path to sj file) columns
majiq-v3 build ./sg_zarr ./build/sg.zarr --groups-tsv experiment.tsv --overwrite

# optionally, you can skip making the groups TSV and use a version with inline sjs and no config file (each specification of --sjs is a different group)
#majiq-v3 build /path/to/results/annotations/sg.zarr /path/to/results/build/sg.zarr --sjs /path/to/results/sj/sample_bc_1.sj /path/to/results/sj/sample_bc_2.sj --sjs /path/to/results/sj/sample_ms_1.sj /path/to/results/sj/sample_ms_2.sj

## CALCULATE PSI COVERAGE FOR USE BY QUANTIFIERS
majiq-v3 psi-coverage ./build/sg.zarr ./psi/H9.psicov ./sj/H9_replicate2.sj ./sj/H9_replicate3.sj
majiq-v3 psi-coverage ./build/sg.zarr ./psi/K562.psicov ./sj/K562_replicate3.sj ./sj/K562_replicate4.sj

## OPTIONAL STEP: MOCCASIN adjustment for confounding factors (similar to the MOCCASIN project, which was separate in v2)
#majiq-v3 moccasin-pipeline /path/to/results/build_after_moccasin /path/to/results/psi/Brain_Cerebellum.psicov /path/to/results/psi/Muscle_Skeletal.psicov --factors_tsv /path/to/inputs/model_matrix.tsv --confounding confounder_column_1 confounder_column_2 --overwrite

## MAJIQ PSI and output TSV (similar to TSV output by majiq psi in v2)
majiq-v3 quantify ./psi/H9.psicov --min-experiments 0.01 --splicegraph ./build/sg.zarr --output-tsv ./psi/H9.tsv --overwrite
majiq-v3 quantify ./psi/K562.psicov --min-experiments 0.01 --splicegraph ./build/sg.zarr --output-tsv ./psi/K562.tsv --overwrite

## MAJIQ DPSI and output TSV (similar to TSV output by majiq deltapsi in v2)
majiq-v3 deltapsi --splicegraph ./build/sg.zarr --output-voila ./dpsi/H9vK562.dpsicov --output-tsv ./dpsi/H9vK562.tsv -psi1 ./psi/H9.psicov -psi2 ./psi/K562.psicov

## MAJIQ HET and output TSV (similar to TSV output by majiq heterogen in v2)
#majiq-v3 heterogen --stats infoscore mannwhitneyu ttest tnom --splicegraph /path/to/results/build/sg.zarr --output-voila /path/to/results/het/Brain_Cerebellum-Muscle_Skeletal.hetcov --output-tsv /path/to/results/het/Brain_Cerebellum-Muscle_Skeletal.tsv -psi1 /path/to/results/psi/Brain_Cerebellum.psicov -psi2 /path/to/results/psi/Muscle_Skeletal.psicov

## VOILA visualization and subcommands
# further downstream voila usages are very similar to v2, except that you must provide paths to the splicegraph (sg.zarr), quant files, AND splicegraph coverage SGC files
# the quant files, similar to v2, are generated by the quantify, deltapsi, or heterogen commands above in majiq-v3
# the sgc files are a separate step which must be provided along with each each group of sj files like below
## OUTPUT SPLICEGRAPH COVERAGE FOR USE BY VOILA
#majiq-v3 sg-coverage /path/to/results/build/sg.zarr /path/to/results/build/Brain_Cerebellum.sgc /path/to/results/sj/sample_bc_1.sj /path/to/results/sj/sample_bc_2.sj
#majiq-v3 sg-coverage /path/to/results/build/sg.zarr /path/to/results/build/Muscle_Skeletal.sgc /path/to/results/sj/sample_ms_1.sj /path/to/results/sj/sample_ms_2.sj

# voila view example using single PSI ; other voila commands, like tsv, modulizer work as in v2
# note that voila commands can use v2 splicegraph and v2 hdf5 quantification files for backwards compatibility, but not BOTH v2 and v3 inputs at the same time
#voila view /path/to/results/build/sg.zarr /path/to/results/psi/Brain_Cerebellum.psicov /path/to/results/build/Brain_Cerebellum.sgc
